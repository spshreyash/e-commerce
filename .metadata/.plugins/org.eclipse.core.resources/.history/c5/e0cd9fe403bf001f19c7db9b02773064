package org.project.clientApp;

import java.util.Scanner;
import org.project.models.LoginModel;
import org.project.services.LoginService;
import org.project.services.LoginServiceImp;
import org.project.models.ProductCatModel;
import org.project.services.ProductCatService;
import org.project.services.ProductCatServiceImpl;
import java.util.List;

public class EcommerceMain {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);  // Scanner for input
        LoginService loginService = new LoginServiceImp(); // Using the interface type for dynamic polymorphism
        LoginModel loginModel = new LoginModel();
        ProductCatService productCatService = new ProductCatServiceImpl(); // ProductCatService for category functionality

        // Product category model to use for checking availability and adding categories
        ProductCatModel productCatModel = new ProductCatModel();
        boolean value = true;

        while (value) {
            System.out.println("Please choose an option:");
            System.out.println("1. Login");
            System.out.println("2. Check Product Category Availability");
            System.out.println("3. Show All Product Categories");  // New option to show all categories
            System.out.println("4. Exit");
            System.out.print("Enter choice: ");
            int choice = sc.nextInt();  // Get user choice

            switch (choice) {
                case 1:
                    // Login functionality
                    System.out.println("Do you want to login or register?");
                    System.out.println("1. Login");
                    System.out.println("2. Register");
                    System.out.print("Enter choice: ");
                    int actionChoice = sc.nextInt();

                    switch (actionChoice) {
                        case 1:
                            // Login process
                            System.out.print("Enter email: ");
                            String email = sc.next();  // User input for email
                            System.out.print("Enter password: ");
                            String password = sc.next();  // User input for password

                            // Set the user inputs into the LoginModel
                            loginModel.setUemail(email);
                            loginModel.setPassword(password);

                            // Check if user exists using the service method
                            boolean isUser = loginService.isUser(loginModel);

                            if (isUser) {
                                System.out.println("Login successful.");
                                // Check if the user is an admin or regular user
                                if ("admin".equalsIgnoreCase(loginModel.getUsertype())) {
                                    System.out.println("Welcome, Admin! You have full access.");

                                    // Admin option to add or update product categories
                                    System.out.println("Would you like to manage product categories?");
                                    System.out.println("1. Add a new category");
                                    System.out.println("2. Update an existing category");
                                    System.out.println("3. View all categories");
                                    System.out.println("4. Logout");
                                    System.out.print("Enter your choice: ");
                                    int adminChoice = sc.nextInt();

                                    switch (adminChoice) {
                                        case 1:
                                            // Admin adds a new category
                                            System.out.print("Enter new product category name: ");
                                            String newCategory = sc.next();  // Admin input for category name
                                            productCatModel.setName(newCategory);

                                            // Call the service method to add the category
                                            boolean categoryAdded = productCatService.addProductCat(productCatModel);
                                            if (categoryAdded) {
                                                System.out.println("Product category \"" + newCategory + "\" has been added successfully.");
                                            } else {
                                                System.out.println("Failed to add product category.");
                                            }
                                            break;

                                        case 2:
                                            // Admin updates an existing category
                                            System.out.print("Enter the existing product category name to update: ");
                                            String categoryToUpdate = sc.next();
                                            System.out.print("Enter the new name for the category: ");
                                            String updatedCategory = sc.next();

                                            // Call the service method to update the category (this requires implementation in your repo/service)
                                            // Example: productCatService.updateProductCat(categoryToUpdate, updatedCategory);
                                            break;

                                        case 3:
                                            // Admin views all product categories
                                            List<ProductCatModel> allCategories = productCatService.getAllProductCats();

                                            if (allCategories.isEmpty()) {
                                                System.out.println("No product categories are available.");
                                            } else {
                                                System.out.println("All product categories:");
                                                for (ProductCatModel category : allCategories) {
                                                    System.out.println(category.getName());  // Display each category name
                                                }
                                            }
                                            break;

                                        case 4:
                                            // Admin logs out
                                            System.out.println("Logging out...");
                                            break;

                                        default:
                                            System.out.println("Invalid choice.");
                                            break;
                                    }
                                } else {
                                    System.out.println("Welcome, " + loginModel.getUname() + "! You have limited access.");

                                    // Regular user can only check product category availability
                                    System.out.print("Enter product category name to check availability: ");
                                    String categoryName = sc.next();  // User input for category name

                                    // Create a ProductCatModel with the category name
                                    productCatModel.setName(categoryName);

                                    // Check if the category is available using the service
                                    boolean isCategoryAvailable = productCatService.isProductCat(productCatModel);

                                    if (isCategoryAvailable) {
                                        System.out.println("The product category \"" + categoryName + "\" is available.");
                                    } else {
                                        System.out.println("The product category \"" + categoryName + "\" is not available.");
                                    }
                                }
                            } else {
                                System.out.println("Invalid credentials. Please try again.");
                            }
                            break;

                        case 2:
                            // Registration functionality (you can implement registration logic here)
                            System.out.print("Enter your name: ");
                            String name = sc.next();
                            System.out.print("Enter your email: ");
                            String regEmail = sc.next();
                            System.out.print("Enter your password: ");
                            String regPassword = sc.next();

                            // Create a new LoginModel for registration
                            loginModel.setUname(name);
                            loginModel.setUemail(regEmail);
                            loginModel.setPassword(regPassword);

                            // Save the new user (You will need to implement the registration logic in your service/repo)
                            boolean registrationSuccess = loginService.registerUser(loginModel);
                            if (registrationSuccess) {
                                System.out.println("Registration successful! You can now log in.");
                            } else {
                                System.out.println("Registration failed. Please try again.");
                            }
                            break;

                        default:
                            System.out.println("Invalid choice.");
                            break;
                    }
                    break;

                case 2:
                    // Check if product category is available
                    System.out.print("Enter product category name to check availability: ");
                    String categoryName = sc.next();  // User input for category name

                    // Create a ProductCatModel with the category name
                    productCatModel.setName(categoryName);

                    // Check if the category is available using the service
                    boolean isCategoryAvailable = productCatService.isProductCat(productCatModel);

                    if (isCategoryAvailable) {
                        System.out.println("The product category \"" + categoryName + "\" is available.");
                    } else {
                        System.out.println("The product category \"" + categoryName + "\" is not available.");
                    }
                    break;

                case 3:
                    // Show all product categories
                    List<ProductCatModel> allCategories = productCatService.getAllProductCats();

                    if (allCategories.isEmpty()) {
                        System.out.println("No product categories are available.");
                    } else {
                        System.out.println("All product categories:");
                        for (ProductCatModel category : allCategories) {
                            System.out.println(category.getName());  // Display each category name
                        }
                    }
                    break;

                case 4:
                    // Exit the application
                    System.out.println("Exiting the application...");
                    value = false;
                    break;

                default:
                    // Invalid input
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }

        sc.close();  // Close scanner resource
    }
}
