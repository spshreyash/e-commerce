package org.project.clientApp;

import java.util.Scanner;
import org.project.models.LoginModel;
import org.project.services.LoginService;
import org.project.services.LoginServiceImp;
import org.project.models.ProductCatModel;
import org.project.services.ProductCatService;
import org.project.services.ProductCatServiceImpl;
import java.util.List;

public class EcommerceMain {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);  // Scanner for input
        LoginService loginService = new LoginServiceImp(); // Using the interface type for dynamic polymorphism
        LoginModel loginModel = new LoginModel();
        ProductCatService productCatService = new ProductCatServiceImpl(); // ProductCatService for category functionality
        boolean running = true;

        while (running) {
            System.out.println("Please choose an option:");
            System.out.println("1. Login");
            System.out.println("2. Check Product Category Availability");
            System.out.println("3. Show All Product Categories");
            System.out.println("4. Exit");
            System.out.print("Enter choice: ");
            int choice = sc.nextInt();  // Get user choice
            
            switch (choice) {
                case 1:
                    // Ask for login or registration
                    System.out.println("Do you want to login or register?");
                    System.out.println("1. Login");
                    System.out.println("2. Register");
                    System.out.print("Enter choice: ");
                    int actionChoice = sc.nextInt();
                    
                    switch (actionChoice) {
                        case 1:
                            // Login functionality
                            System.out.print("Enter email: ");
                            String email = sc.next();  // User input for email

                            System.out.print("Enter password: ");
                            String password = sc.next();  // User input for password

                            // Set the user inputs into the LoginModel
                            loginModel.setUemail(email);
                            loginModel.setPassword(password);

                            // Check if user exists using the service method
                            boolean isUser = loginService.isUser(loginModel);
                            
                            if (isUser) {
                                System.out.println("Login successful.");
                                // Check if the user is an admin or regular user
                                if ("admin".equalsIgnoreCase(loginModel.getUsertype())) {
                                    System.out.println("Welcome, Admin! You have full access.");
                                    // Admin gets additional options
                                    showAdminOptions(sc, productCatService); // Call admin options
                                } else {
                                    System.out.println("Welcome, " + loginModel.getUname() + "! You have limited access.");
                                }
                            } else {
                                System.out.println("Invalid credentials. Please try again.");
                            }
                            break;

                        case 2:
                            // Registration functionality
                            System.out.print("Enter name: ");
                            String name = sc.next();  // User input for name

                            System.out.print("Enter email: ");
                            email = sc.next();  // User input for email

                            System.out.print("Enter password: ");
                            password = sc.next();  // User input for password

                            System.out.print("Enter user type (user/admin): ");
                            String userType = sc.next();  // User input for user type (user/admin)

                            // Set the user inputs into the LoginModel
                            loginModel.setUname(name);
                            loginModel.setUemail(email);
                            loginModel.setPassword(password);
                            loginModel.setUsertype(userType);

                            // Register the user using the service method
                            boolean registrationSuccessful = loginService.registerUser(loginModel);
                            
                            if (registrationSuccessful) {
                                System.out.println("Registration successful. You can now log in.");
                            } else {
                                System.out.println("Registration failed. Please try again.");
                            }
                            break;

                        default:
                            // Invalid action choice
                            System.out.println("Invalid choice. Please select a valid option.");
                    }
                    break;

                case 2:
                    // Check if product category is available
                    System.out.print("Enter product category name to check availability: ");
                    String categoryName = sc.next();  // User input for category name
                    
                    // Create a ProductCatModel with the category name
                    ProductCatModel productCatModel = new ProductCatModel();
                    productCatModel.setName(categoryName);
                    
                    // Check if the category is available using the service
                    boolean isCategoryAvailable = productCatService.isProductCat(productCatModel);
                    
                    if (isCategoryAvailable) {
                        System.out.println("The product category \"" + categoryName + "\" is available.");
                    } else {
                        System.out.println("The product category \"" + categoryName + "\" is not available.");
                    }
                    break;

                case 3:
                    // Show all product categories
                    List<ProductCatModel> allCategories = productCatService.getAllProductCats();
                    
                    if (allCategories.isEmpty()) {
                        System.out.println("No product categories are available.");
                    } else {
                        System.out.println("All Product Categories:");
                        for (ProductCatModel category : allCategories) {
                            System.out.println(category.getName());  // Display each category name
                        }
                    }
                    break;

                case 4:
                    // Exit the application
                    System.out.println("Exiting the application...");
                    running = false;
                    break;

                default:
                    // Invalid input
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }

        sc.close();  // Close scanner resource
    }

    // Method to show Admin options
    private static void showAdminOptions(Scanner sc, ProductCatService productCatService) {
        boolean adminRunning = true;

        while (adminRunning) {
            System.out.println("Admin Options:");
            System.out.println("1. Add New Product Category");
            System.out.println("2. Exit Admin Options");
            System.out.print("Enter choice: ");
            int adminChoice = sc.nextInt();

            switch (adminChoice) {
                case 1:
                    // Admin adds a new product category
                    System.out.print("Enter the new product category name: ");
                    String newCategoryName = sc.next();  // Input new category name
                    
                    // Create a ProductCatModel with the new category name
                    ProductCatModel newProductCat = new ProductCatModel();
                    newProductCat.setName(newCategoryName);
                    
                    // Call the service method to add the new category (this method should be implemented in your service class)
                    boolean isCategoryAdded = productCatService.addProductCat(newProductCat);
                    
                    if (isCategoryAdded) {
                        System.out.println("Product category \"" + newCategoryName + "\" added successfully.");
                    } else {
                        System.out.println("Failed to add product category.");
                    }
                    break;

                case 2:
                    // Exit Admin options
                    adminRunning = false;
                    break;

                default:
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }
    }
}
